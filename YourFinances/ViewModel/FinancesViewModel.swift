//
//  FinancesViewModel.swift
//  YourFinances
//
//  Created by –ú–∞–∫—Å–∏–º –ë–æ—Ç–∞–ª–æ–≤ on 13.12.2022.
//

import Foundation

class FinancesViewModel: ObservableObject {
    
    // MARK: - –≠–ª–µ–º–µ–Ω—Ç—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–π
    @Published var selectedCategory = CategoryModel(title: "", image: "")
    @Published var operationAmount = ""
    @Published var operationDescription = ""
    
    // –§–ª–∞–≥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –≤—ã–±–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ NewOperationView
    @Published var isMinus = true
    
    // –§–ª–∞–≥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –≤—å—é—à–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ ShowCategoriesView
    @Published var showFullCategories = false
    
    // –§–ª–∞–≥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –≤—å—é—à–∫–∏ Numpad –≤ NewOperationView
    @Published var isPresentedNumpadView = false
    
    
    // MARK: - –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ MainView
    @Published var currentItem = FinancesModel(type: .minus, amount: 0, category: CategoryModel(title: "", image: ""), description: "")
    
    // –§–ª–∞–≥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –í—å—é —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ MainView
    @Published var showItem = false
    
    
    // MARK: - –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    @Published var titleCategory = ""
    @Published var imageCategory = ""
    
    // –§–ª–∞–≥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –≤—ã–±–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ NewCategoryView
    @Published var isMinusNewCategory = true
    
    
    // MARK: - –ú–∞—Å—Å–∏–≤—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    @Published var categoryMinusArray = [
        CategoryModel(title: "–ü—Ä–æ–¥—É–∫—Ç—ã", image: "ü•¨"),
        CategoryModel(title: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", image: "üöé"),
        CategoryModel(title: "–î–æ–º", image: "üè†"),
        CategoryModel(title: "–°–ª–∞–¥–æ—Å—Ç–∏", image: "üç≠"),
        CategoryModel(title: "–•–æ–±–±–∏", image: "üëü")]
    
    @Published var categoryPlusArray = [
        CategoryModel(title: "–ó–∞—Ä–ø–ª–∞—Ç–∞", image: "üí∞"),
        CategoryModel(title: "–î–æ–Ω–∞—Ç—ã", image: "ü§ë"),
        CategoryModel(title: "–°–±–µ—Ä–µ–∂–µ–Ω–∏—è", image: "üí∏"),
        CategoryModel(title: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", image: "üí∂")]
    
    
    // MARK: - –ú–∞—Å—Å–∏–≤—ã –æ–ø–µ—Ä–∞—Ü–∏–π
    @Published var minusArray = [FinancesModel]()
    @Published var plusArray = [FinancesModel]()
    
    
    // MARK: - –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—ë–º
    @Published var currentDay = Date()
    @Published var currentWeek = [Date]()
    @Published var currentMonth = [Date]()
    private var calendar = Calendar.current
    
    
    // MARK: - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
    init() {
        getCurrentWeek()
        mockData()
    }
    
    
    // MARK: - –¢–µ—Å—Ç–æ–≤–∞—è —Ñ–µ–π–∫–æ–≤–∞—è –¥–∞—Ç–∞
    // !!! –ü–æ—Å–ª–µ –≤–≤–µ–¥–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç —É–¥–∞–ª–∏—Ç—å
    func mockData() {
        minusArray.append(FinancesModel(type: .minus, amount: 647, category: CategoryModel(title: "–ü—Ä–æ–¥—É–∫—Ç—ã", image: "ü•¨"), description: ""))
        plusArray.append(FinancesModel(type: .plus, amount: 34913, category: CategoryModel(title: "–ó–∞—Ä–ø–ª–∞—Ç–∞", image: "üí∞"), description: ""))
    }
    
    
    // MARK: - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ / –¥–æ—Ö–æ–¥–∞
    func saveOperation() {
        guard let amountDouble = Double(operationAmount) else {
            print("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∏–Ω–≥–∏ –≤ –¥–∞–±–ª")
            return
        }
        
        if isMinus == true {
            minusArray.append(FinancesModel(type: .minus, amount: amountDouble, category: selectedCategory, description: operationDescription))
            print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞")
        } else {
            plusArray.append(FinancesModel(type: .plus, amount: amountDouble, category: selectedCategory, description: operationDescription))
            print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞")
        }
    }
    
    // MARK: - –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –æ–ø–µ—Ä–∞—Ü–∏–π
    func findItem(value searchValue: FinancesModel, in array: [FinancesModel]) -> Int? {
        for (index, value) in array.enumerated() {
            if value.id == searchValue.id {
                return index
            }
        }
        return nil
    }
    
    // MARK: - –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –º–∞—Å—Å–∏–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    func findCategory(value searchValue: CategoryModel, in array: [CategoryModel]) -> Int? {
        for (index, value) in array.enumerated() {
            if value.id == searchValue.id {
                return index
            }
        }
        return nil
    }
    
    // MARK: - –£–¥–∞–ª–µ–Ω–∏–µ –Ω—É–∂–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    func deleteCategory(item: CategoryModel) {
        // –§–ª–∞–≥ –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç—Ä–∞—Ç—ã —ç—Ç–æ –∏–ª–∏ –Ω–µ—Ç
        var isMinus: Bool? = false
        
        // –ò–Ω–¥–µ–∫c —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–æ—Ä–∏–π. –û–¥–∏–Ω –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å nil
        let minusIndex = findCategory(value: item, in: categoryMinusArray)
        let plusIndex = findCategory(value: item, in: categoryPlusArray)
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ nil
        if findCategory(value: item, in: categoryMinusArray) != nil {
            isMinus = true
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        if isMinus! {
            categoryMinusArray.remove(at: minusIndex!)
        } else {
            categoryPlusArray.remove(at: plusIndex!)
        }
    }
    
    // MARK: - –£–¥–∞–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –¥–µ—Ç–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    func deleteItem(item: FinancesModel) {
        if item.type == .minus {
            let index = findItem(value: item, in: minusArray)
            minusArray.remove(at: index!)
        } else {
            let index = findItem(value: item, in: plusArray)
            plusArray.remove(at: index!)
        }
    }
    
    // MARK: - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    func addNewCategory() {
        if isMinusNewCategory == true {
            categoryMinusArray.insert(CategoryModel(title: titleCategory, image: imageCategory), at: 0)
        } else {
            categoryPlusArray.insert(CategoryModel(title: titleCategory, image: imageCategory), at: 0)
        }
    }
    
    // MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –ø–æ –∞—Ä—Ö–∏–≤—É
    func getSum(for array: [FinancesModel]) -> Double {
        var amount: Double = 0
        
        for item in array {
            amount = amount + item.amount
        }
        
        return amount
    }
    
    // MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    func getCurrentDate(for date: Date, format: String) -> String {
        let formatter = DateFormatter()
        formatter.dateFormat = format
        return formatter.string(from: date)
    }
    
    // MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    func getCurrentWeek() {
        let today = Date()
        
        let week = calendar.dateInterval(of: .weekOfMonth, for: today)
        
        guard let firstDayWeek = week?.start else { return }
        
        (1...7).forEach { day in
            if let weekDay = calendar.date(byAdding: .day, value: day, to: firstDayWeek) {
                currentWeek.append(weekDay)
            }
        }
    }
    
    // MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –ø–æ –¥–∞—Ç–µ
    func getTitleWeekDay(for date: Date) -> String {
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "EEEE"
        let weekDay = dateFormatter.string(from: date).capitalized
        return weekDay
    }
    
    // MARK: - –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞ –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞
    func getTitleMonth(for date: Date) -> String {
        let components = calendar.dateComponents([.month], from: date)
        let month = components.month!
        
        let result: String
        
        switch month {
        case 1: result = "—è–Ω–≤–∞—Ä—å"
        case 2: result = "—Ñ–µ–≤—Ä–∞–ª—å"
        case 3: result = "–º–∞—Ä—Ç"
        case 4: result = "–∞–ø—Ä–µ–ª—å"
        case 5: result = "–º–∞–π"
        case 6: result = "–∏—é–Ω—å"
        case 7: result = "–∏—é–ª—å"
        case 8: result = "–∞–≤–≥—É—Å—Ç"
        case 9: result = "—Å–µ–Ω—Ç—è–±—Ä—å"
        case 10: result = "–æ–∫—Ç—è–±—Ä—å"
        case 11: result = "–Ω–æ—è–±—Ä—å"
        default: result = "–¥–µ–∫–∞–±—Ä—å"
        }
        return result
    }
}
